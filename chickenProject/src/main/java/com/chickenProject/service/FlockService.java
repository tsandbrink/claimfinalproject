package com.chickenProject.service;

import com.chickenProject.repo.FlockRepo;
import com.chickenProject.entity.Chicken;
import com.chickenProject.entity.Flock;
import com.chickenProject.entity.User;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class FlockService {
    @Autowired
    private FlockRepo flockRepo;

    public Flock save(Flock flock) {
		// Another predefined function, used to save your objects
		// Id will be autogenerated and will come back in the return after its saved

	    return flockRepo.save(flock);
	}
	
	public Flock update(Flock flock) throws Exception {
		// Another predefined function, used to save your objects
		// Id will be autogenerated and will come back in the return after its saved

        if(flock.getId() != null) {
	        return flockRepo.save(flock);
        }

        throw new Exception("Object does not exist! id not present");
	}
    
    public Flock findById(Integer flockId) throws Error {
        
    	// Find by is another predefined repo function, you can always find by the primary key
    	// when you use findById, its good practice to use the isPresent in an if check first
    	// It will tell you if a object was actually found, with true or false values, true if found, false is not
    	// It will always return an Optional Object, the flock will be there if found, null if not
    	// If found, give the object back with a .get() to grab it off the Optional object
    	
        if(flockRepo.findById(flockId).isPresent()) {
            return flockRepo.findById(flockId).get();
        }
        
        // if flock is not present, throw error so front end can handle it
        throw new Error("No flock id present, Flock not found, send an id billy, dumbass");
        
    }

	public Flock findByUser(User user) throws Error {
        
    	// Find by is another predefined repo function, you can always find by the primary key
    	// when you use findById, its good practice to use the isPresent in an if check first
    	// It will tell you if a object was actually found, with true or false values, true if found, false is not
    	// It will always return an Optional Object, the flock will be there if found, null if not
    	// If found, give the object back with a .get() to grab it off the Optional object
    	
		Integer flockId = user.getUserFlock().getId();

        if(flockRepo.findById(flockId).isPresent()) {
            return flockRepo.findById(flockId).get();
        }
        
        // if flock is not present, throw error so front end can handle it
        throw new Error("No flock id present, Flock not found, send an id billy, dumbass");
        
    }

	public List<Flock> findAll() {
		return flockRepo.findAll();
	}

    public void deleteById(Integer id) {
	    flockRepo.deleteById(id);
	}

	public Flock addChickenToFlock(Integer flockID, Chicken chicken){
		Flock flock = findById(flockID);
		flock.getChickensInFlock().add(chicken);
		return flockRepo.save(flock);
	}

	
}
